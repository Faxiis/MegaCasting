// <auto-generated />
using System;
using MegaCasting2022.DBLib.Class;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MegaCasting2022.DBLib.Migrations
{
    [DbContext(typeof(MegaCastingContext))]
    [Migration("20221214082555_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MegaCasting2022.DBLib.Class.Activity", b =>
                {
                    b.Property<long>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Identifier"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Identifier");

                    b.ToTable("Activity", (string)null);
                });

            modelBuilder.Entity("MegaCasting2022.DBLib.Class.ActivityArtist", b =>
                {
                    b.Property<long>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Identifier"), 1L, 1);

                    b.Property<long>("IdentifierActivity")
                        .HasColumnType("bigint");

                    b.Property<long>("IdentifierArtist")
                        .HasColumnType("bigint");

                    b.HasKey("Identifier");

                    b.HasIndex("IdentifierActivity");

                    b.HasIndex("IdentifierArtist");

                    b.ToTable("ActivityArtist", (string)null);
                });

            modelBuilder.Entity("MegaCasting2022.DBLib.Class.Artist", b =>
                {
                    b.Property<long>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Identifier"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Identifier");

                    b.ToTable("Artist", (string)null);
                });

            modelBuilder.Entity("MegaCasting2022.DBLib.Class.Client", b =>
                {
                    b.Property<long>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Identifier"), 1L, 1);

                    b.Property<string>("AddressCity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AddressComplement")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AddressRoad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AddressZipCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Identifier");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("MegaCasting2022.DBLib.Class.ContractType", b =>
                {
                    b.Property<long>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Identifier"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Identifier");

                    b.ToTable("ContractType", (string)null);
                });

            modelBuilder.Entity("MegaCasting2022.DBLib.Class.Offer", b =>
                {
                    b.Property<long>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Identifier"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<long>("IdentifierClient")
                        .HasColumnType("bigint");

                    b.Property<long>("IdentifierContractType")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ParutionDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Identifier");

                    b.HasIndex("IdentifierClient");

                    b.HasIndex("IdentifierContractType");

                    b.ToTable("Offer", (string)null);
                });

            modelBuilder.Entity("MegaCasting2022.DBLib.Class.Partner", b =>
                {
                    b.Property<long>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Identifier"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Identifier");

                    b.ToTable("Partner", (string)null);
                });

            modelBuilder.Entity("MegaCasting2022.DBLib.Class.ActivityArtist", b =>
                {
                    b.HasOne("MegaCasting2022.DBLib.Class.Activity", "IdentifierActivityNavigation")
                        .WithMany("ActivityArtists")
                        .HasForeignKey("IdentifierActivity")
                        .IsRequired()
                        .HasConstraintName("FK_ActivityArtist_Activity");

                    b.HasOne("MegaCasting2022.DBLib.Class.Artist", "IdentifierArtistNavigation")
                        .WithMany("ActivityArtists")
                        .HasForeignKey("IdentifierArtist")
                        .IsRequired()
                        .HasConstraintName("FK_ActivityArtist_Artist");

                    b.Navigation("IdentifierActivityNavigation");

                    b.Navigation("IdentifierArtistNavigation");
                });

            modelBuilder.Entity("MegaCasting2022.DBLib.Class.Offer", b =>
                {
                    b.HasOne("MegaCasting2022.DBLib.Class.Client", "IdentifierClientNavigation")
                        .WithMany("Offers")
                        .HasForeignKey("IdentifierClient")
                        .IsRequired()
                        .HasConstraintName("FK_Offer_Client");

                    b.HasOne("MegaCasting2022.DBLib.Class.ContractType", "IdentifierContractTypeNavigation")
                        .WithMany("Offers")
                        .HasForeignKey("IdentifierContractType")
                        .IsRequired()
                        .HasConstraintName("FK_Offer_ContractType");

                    b.Navigation("IdentifierClientNavigation");

                    b.Navigation("IdentifierContractTypeNavigation");
                });

            modelBuilder.Entity("MegaCasting2022.DBLib.Class.Activity", b =>
                {
                    b.Navigation("ActivityArtists");
                });

            modelBuilder.Entity("MegaCasting2022.DBLib.Class.Artist", b =>
                {
                    b.Navigation("ActivityArtists");
                });

            modelBuilder.Entity("MegaCasting2022.DBLib.Class.Client", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("MegaCasting2022.DBLib.Class.ContractType", b =>
                {
                    b.Navigation("Offers");
                });
#pragma warning restore 612, 618
        }
    }
}
